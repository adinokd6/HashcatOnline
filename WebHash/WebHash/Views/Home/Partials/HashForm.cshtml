@model WebHash.Models.ViewModels.CrackHashViewModel
@using static WebHash.Models.Enums.Enums

<div id="updateForHash">
    <div id="loadingDiv" style="display: none;">
        <div class="text-center spinner justify-content-center" id='spinner'>
            <div class="spinner-border" style="width: 5rem; height: 5rem;" role="status">
                <span class="sr-only">Your hash is decoding... it may take a moment</span>
            </div>
            <div>
                <b id="text-spinner">  Your hash is decoding... it may take a moment</b>
            </div>
        </div>
    </div>
    
    @using (Html.BeginForm("CrackHash", "Home", FormMethod.Post, new { id = "hashForm", enctype="multipart/form-data" }))
    {
        <div class="col">
            <div style="width: 700px;">
                <div class="form-group custom-switch">
                    <input asp-for="HashFromInput" type="checkbox" checked>
                    <label asp-for="HashFromInput">Show input for providing hash by your own</label>
                </div>
                <div id="fromFileSelect" style="display: none">
                    <div>
                        @Html.DropDownList("file",new SelectList(Model.Files, "Id", "Name"), "Select file", new { @class="form-control" })
                    </div>
                    <div class="form-group">
                        <label asp-for="HashFromFileId" class="control-label label">Select hash you want to crack</label>
                        <select asp-for="HashFromFileId" class="form-control"></select>
                    </div>
                </div>
                <div id="inputValue" class="form-group">
                    <label asp-for="InputValue" class="control-label label"></label>
                    <textarea asp-for="InputValue" class="form-control" placeholder="fedd1d1122aa65028c81e16ceb85d9c73790a2fa"></textarea>
                    <span asp-validation-for="InputValue" class="text-danger"></span>
                </div>
                <div class="form-group">
                    <label asp-for="HashType" class="control-label label"></label>
                    <select asp-for="HashType" class="form-control" asp-items="@Html.GetEnumSelectList<HashType>()"></select>
                    <span asp-validation-for="HashType" class="text-danger"></span>
                </div>
                <div class="form-group">
                    <label asp-for="AttackMethod" class="control-label label"></label>
                    <select asp-for="AttackMethod" class="form-control" asp-items="@Html.GetEnumSelectList<AttackMethod>()"></select>
                    <span asp-validation-for="AttackMethod" class="text-danger"></span>
                </div>
                <div id="dict">
                    <div id="dict1" style="display: none">
                        <div class="form-group">
                            <label asp-for="Dictionary1" class="control-label label">Select dictionary</label>
                            <input asp-for="Dictionary1" type="file" />
                        </div>
                    </div>
                    <div id="dict2" style="display: none">
                        <div class="form-group">
                            <label asp-for="Dictionary2" class="control-label label">Select second dictionary</label>
                            <input asp-for="Dictionary2" type="file" />
                        </div>
                    </div>
                </div>
                <div class="submit" id="btnHashFormSubmit">
                    <button type="submit" style="margin-top:16px"  class="btn btn-primary text-center" id="submitButton">Crack</button>
                </div>
            </div>
        </div>
    }
    <div class="text-justify text">
        @if (Model.OutputValue != null && Model.OutputValue.Item1 != null)
        {
            <div>
                Your hash was:
                <b>@Model.OutputValue.Item1</b>
            </div>
            <div>
                Decrypted password:
                <b>@Model.OutputValue.Item2</b>
            </div>
        }
        else if (Model.OutputValue != null)
        {
            if (Model.OutputValue.Item1 == null && Model.OutputValue.Item2 != null)
            {
                <div>
                    Error occured:
                    <b>@Model.OutputValue.Item2</b>
                </div>
            }

        }
    </div>
    <div class="col">
    </div>
</div>
